function can be exported from one js file to another using module.exports and require methods.

Fat arrow function  should be one line to export i.e., exports.sum = (a,b)=> a+b; only works
const sum = (a,b)=> a+b; and exports.sum doesn't work

 exports is a private to each module

 Object destructuring means importing only the required methods like importing required function only in JAVA.


Nodemon= built in package of NPM (node package manager) to reflect the changes done in server without restarting the server

scripts part of package.json is used to run application. Example: if i want to run node app.js then this "node app.js" can be written in script part of package.json like
"scripts": {
    "test": "echo \"Error: no test specified\" && exit 1",
    "dev": "nodemon app.js"
  }

  now we can do "npm run dev"

  node js events are put in a stack and they are non locking events. Node js is single threaded. If a event takes longer time then event loops moves processing to next event 
  whereas the previously running event is let to be handled by process callback method. Once the callback method generates output the output of skipped event is shown. 

Example: 
const fs = require("fs");
const fileName= "target.txt";
fs.readFile(fileName, (err, data)=>{
    if(err){
        console.log(err);
    }
    console.log(data.toString());
})

console.log("hello from the other side");

Here, content of file should have been printed first but hello from the other side is printed first because of events being asyunchronous and reading content from file 
takes longer time than simply logging some text in console.


////nodeAPI//////// new folder for learning API creation via node js 

contains folder routes which contains post.js. This JS file is for all the API methods to be created in the project which will be exported to app.js of nodeAPI

Morgan is a middleware provided by NPM to track where the callback function are obtained from if there is presence of routes.

middleware can be created or used NPM released. Can be used for authentication. middleware takes 3 arguments req, response and next. Here next is required as once the middleware does
its job it should pass that event to next event in event loop so next() is required.

routes===> for just routing
controller====>all the logic should be written here